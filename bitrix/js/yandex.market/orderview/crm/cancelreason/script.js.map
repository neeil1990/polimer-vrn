{"version":3,"file":"script.js","sources":["src/index.js"],"sourcesContent":["// @flow\n\nexport class CancelReason {\n\n\tstatic defaults = {\n\t\tentityType: 'ORDER',\n\t\tentityId: null,\n\t\tvariants: [],\n\t}\n\n\tconstructor(options: Object = {}) {\n\t\tthis.options = Object.assign({}, this.constructor.defaults, options);\n\n\t\tthis.bind();\n\t}\n\n\tbind() {\n\t\tBX.addCustomEvent('CrmProcessFailureDialogContentCreated', this.onFailureDialogCreated);\n\t\tBX.addCustomEvent('CrmProgressControlBeforeFailureDialogClose', this.onBeforeFailureDialogClose);\n\t}\n\n\tonFailureDialogCreated = (dialog) => {\n\t\tif (!this.isMatchDialog(dialog)) { return; }\n\n\t\tconst wrapper = dialog.getWrapper();\n\t\tconst previous = wrapper.querySelector('textarea[name=\"REASON_CANCELED\"]');\n\n\t\tif (previous == null) { return; }\n\n\t\tprevious.insertAdjacentHTML('afterend', this.buildSelect(previous.value));\n\t\tprevious.remove();\n\t}\n\n\tonBeforeFailureDialogClose = (control, dialog) => {\n\t\tif (!this.isMatchDialog(dialog)) { return; }\n\n\t\tconst statusManager = BX.CrmOrderStatusManager.current;\n\t\tconst wrapper = dialog.getWrapper();\n\t\tconst select = wrapper.querySelector('select[name=\"REASON_CANCELED\"]');\n\n\t\tif (select == null) { return; }\n\n\t\tif (typeof statusManager.saveParams !== 'object')\n\t\t{\n\t\t\tconsole.warn('missing statusManager.saveParams');\n\t\t\treturn;\n\t\t}\n\n\t\tstatusManager.saveParams[select.name] = select.value;\n\t}\n\n\tisMatchDialog(dialog) {\n\t\tconst wrapper = dialog.getWrapper();\n\t\tconst entityType = dialog.getEntityType();\n\t\tconst entityId = dialog.getEntityId();\n\n\t\treturn (\n\t\t\twrapper\n\t\t\t&& entityType === this.options.entityType\n\t\t\t&& entityId != null\n\t\t\t&& ('' + entityId) === ('' + this.options.entityId)\n\t\t);\n\t}\n\n\tbuildSelect(selected: ?string) {\n\t\tlet foundSelected = false;\n\n\t\treturn `<div class=\"ui-ctl ui-ctl-after-icon ui-ctl-dropdown ui-ctl-w100\">\n\t\t\t<select class=\"ui-ctl-element\" name=\"REASON_CANCELED\" style=\"max-width: 100%\">\n\t\t\t\t${this.options.variants.map((variant) => {\n\t\t\t\t\tconst isSelected = (variant['ID'] === selected);\n\t\t\t\t\t\n\t\t\t\t\tif (isSelected) { foundSelected = true; }\n\t\t\t\t\t\n\t\t\t\t\treturn `<option value=\"${variant['ID']}\" ${isSelected ? 'selected' : ''}>${variant['VALUE']}</option>`;\n\t\t\t\t}).join('')}\n\t\t\t\t${!foundSelected && selected != null && selected !== '' ? `<option selected>${selected}</option>` : ''}\n\t\t\t</select>\n\t\t\t<div class=\"ui-ctl-after ui-ctl-icon-angle\"></div>\n\t\t</div>`;\n\t}\n\n}"],"names":["CancelReason","constructor","options","onFailureDialogCreated","dialog","this","isMatchDialog","previous","getWrapper","querySelector","insertAdjacentHTML","buildSelect","value","remove","onBeforeFailureDialogClose","control","statusManager","BX","CrmOrderStatusManager","current","select","saveParams","name","console","warn","Object","assign","defaults","bind","addCustomEvent","wrapper","entityType","getEntityType","entityId","getEntityId","selected","foundSelected","variants","map","variant","isSelected","join"],"mappings":"6JAEO,MAAMA,EAQZC,YAAYC,EAAkB,SAW9BC,uBAA0BC,QACpBC,KAAKC,cAAcF,gBAGlBG,EADUH,EAAOI,aACEC,cAAc,oCAEvB,MAAZF,IAEJA,EAASG,mBAAmB,WAAYL,KAAKM,YAAYJ,EAASK,QAClEL,EAASM,gBAGVC,2BAA6B,CAACC,EAASX,SACjCC,KAAKC,cAAcF,gBAElBY,EAAgBC,GAAGC,sBAAsBC,QAEzCC,EADUhB,EAAOI,aACAC,cAAc,kCAEvB,MAAVW,IAEoC,iBAA7BJ,EAAcK,WAMzBL,EAAcK,WAAWD,EAAOE,MAAQF,EAAOR,MAJ9CW,QAAQC,KAAK,2CAjCTtB,QAAUuB,OAAOC,OAAO,GAAIrB,KAAKJ,YAAY0B,SAAUzB,QAEvD0B,OAGNA,OACCX,GAAGY,eAAe,wCAAyCxB,KAAKF,wBAChEc,GAAGY,eAAe,6CAA8CxB,KAAKS,4BAiCtER,cAAcF,SACP0B,EAAU1B,EAAOI,aACjBuB,EAAa3B,EAAO4B,gBACpBC,EAAW7B,EAAO8B,qBAGvBJ,GACGC,IAAe1B,KAAKH,QAAQ6B,YAChB,MAAZE,GACC,GAAKA,GAAe,GAAK5B,KAAKH,QAAQ+B,SAI5CtB,YAAYwB,OACPC,GAAgB,QAEZ,qKAEJ/B,KAAKH,QAAQmC,SAASC,KAAKC,UACtBC,EAAcD,EAAO,KAAWJ,SAElCK,IAAcJ,GAAgB,GAE1B,kBAAiBG,EAAO,OAAWC,EAAa,WAAa,MAAMD,EAAO,oBAChFE,KAAK,gBACLL,GAA6B,MAAZD,GAAiC,KAAbA,EAA4D,GAAzC,oBAAmBA,uGA1ErEnC,EAEL2B,SAAW,CACjBI,WAAY,QACZE,SAAU,KACVI,SAAU"}